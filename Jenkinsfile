// כאן נגדיר את המשתנים הלא מובנים מראש. נצטרך לקשר אותם לסקריפטים בשפת גרובי ששם נכתוב את הפעולות
// כתבתי בהערה כי הגוב יכשל בלי
// CODE_CHANGES == getGitChanges()
pipeline {

    agent any
    // כאן נגדיר משתנים לקובץ
    environment {
        // דוגמה למשתנה
        NEW_VERSION = '1.3.0' 
        // קדנטיאלס זו פונקציה שמושכת את הקרדנשיאלס מהגנקיס (כמובן אחרי שהגדרנו אותם ) ומכניסה אותם למשתני סביבה
        // כדי לעבוד עם הפונקציה הזו נהייה חייבים להתקין פלאגין שנקרא Credentials Binding
        // הפרמטר שהפונקציה מקבלת זה המזהה של הקרדנשיאלס
        SERVER_CRENTIALSGHFJ = credentials('github')
    }
    stages {

        stage("build") {
            when { // דוגמה לתנאי בוליאני: כלומר רק אם <הביטוי באקספרשן הוא אמת> יקרה <מה שנמצא בסטאג'> י
                expression { // היטוי הבוליאני שצריך להתקיים כדי שהסטאג' יתבצע
                     //התנאי הבוליאני פה אומר אם הבראנצ הוא "דאב" וגם יש שינוי בקוד 
                     // בנוסף חשוב לשים לב שיש משתנים קבועים ויש כאלה שנצטרך להגדיר בעצמנו
                     // המשתנה בראנצ ניים הוא קבוע. המשתנה קוד צאנגס הוא לא ונצטרך להגדיר אותו בראש הקובץ
                     //כאן כתבתי אותו בהערה כי הוא לא מוגדר ולכן הגוב נכשל
                    env.BRANCH_NAME == 'dev' //&& CODE_CHANGES == true
                }
            }
            steps {
                echo "building the app..."
                // דוגמה לקריאה למשתנה. חשוב לשים לב שהמשתנה חייב להיות בגרשיים כפולות
                echo "app versin ${NEW_VERSION}"
                // דוגמה למשתנה בגרשים לא כפולות, בצורה זו הקובץ לא יקרא למשתנה
                echo 'app versin ${NEW_VERSION}'
            }
        }
        stage("test") {
            
            steps {
                echo "testing the app..."
            }
        }
        stage("deploy") {
            
            steps {
                echo "deploying the app..." 
                echo "deploying th ${SERVER_CRENTIALSGHFJ}" 

            }
        }
    }
    post { // כאן נגדיר מה קורה בסיום הפעולה
        always { // תמיד לא משנה אם הצליח או לא
            echo "pass"
        }
        success { // פעולות שיקרו רק אם הגוב הצליח
            echo "pass"
        }
        failure { // פעולות שיקרו רק אם הגוב נכשל
            echo "pass"
        }
    }
}